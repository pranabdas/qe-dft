(self.webpackChunkespresso=self.webpackChunkespresso||[]).push([[254],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return c},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?o.createElement(f,i(i({ref:n},c),{},{components:t})):o.createElement(f,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=t[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8104:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var o=t(2122),r=t(9756),a=(t(7294),t(3905)),i=["components"],s={title:"k-resolved DOS"},l=void 0,p={unversionedId:"hands-on/kpdos",id:"hands-on/kpdos",isDocsHomePage:!1,title:"k-resolved DOS",description:"Here we will calculate k-resolved density of states for silicon. First we begin",source:"@site/docs/hands-on/kpdos.md",sourceDirName:"hands-on",slug:"/hands-on/kpdos",permalink:"/espresso/hands-on/kpdos",editUrl:"https://github.com/pranabdas/espresso/blob/master/docs/hands-on/kpdos.md",version:"current",frontMatter:{title:"k-resolved DOS"},sidebar:"docs",previous:{title:"P-DOS",permalink:"/espresso/hands-on/pdos"},next:{title:"Graphene",permalink:"/espresso/hands-on/graphene"}},c=[],u={toc:c};function d(e){var n=e.components,s=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Here we will calculate k-resolved density of states for silicon. First we begin\nwith self consistent field calculation. Here is the input:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x -inp si_scf.in > si_scf.out\n")),(0,a.kt)("p",null,"Followed by the bands calculation. Note that for bands calculation I have\ndoubled the number of k-points compared to our previous bands calculation."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pw.x -inp si_bands.in > si_bands.out\n")),(0,a.kt)("p",null,"Calculate the orbital projections with k-resolved information:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="src/silicon/si_projwfc.in"',title:'"src/silicon/si_projwfc.in"'},"&projwfc\n    outdir       = './tmp/'\n    prefix       = 'silicon'\n    ngauss       = 0\n    degauss      = 0.036748\n    DeltaE       = 0.005\n    kresolveddos = .true.\n    filpdos      = 'silicon.k'\n/\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"projwfc.x -inp si_projwfc.in > si_projwfc.out\n")),(0,a.kt)("p",null,"This will give separate orbital projections, as well as total sum for k-resolved\nDOS. Make plots:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="notebooks/silicon-kpdos.ipynb"',title:'"notebooks/silicon-kpdos.ipynb"'},"import matplotlib.pyplot as plt\nfrom matplotlib import rcParamsDefault\nimport numpy as np\n%matplotlib inline\n\ndata = np.loadtxt('../src/silicon/silicon.k.pdos_tot')\n\nk = np.unique(data[:,0])  # k values\ne = np.unique(data[:, 1])  # dos energy values\n\ndos = np.zeros([len(k), len(e)])\n\nfor i in range(len(data)):\n    e_index = int(i % len(e))\n    k_index = int(data[i][0] - 1)\n    dos[k_index, e_index] = data[i][2]\n\nplt.pcolormesh(k, e, dos.T, cmap='magma', shading='auto')\n# plt.ylim(-2, 10)\nplt.xticks([]);\nplt.ylabel('Energy (eV)')\nplt.xticks([])\nplt.gcf().text(0.12, 0.06, 'L', fontsize=16, fontweight='normal')\nplt.gcf().text(0.325, 0.06, '$\\Gamma$', fontsize=16, fontweight='normal')\nplt.gcf().text(0.563, 0.06, 'X', fontsize=16, fontweight='normal')\nplt.gcf().text(0.646, 0.06, 'U', fontsize=16, fontweight='normal')\nplt.gcf().text(0.892, 0.06, '$\\Gamma$', fontsize=16, fontweight='normal')\nplt.show()\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"kpdos",src:t(8703).Z})),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"If you are using ",(0,a.kt)("inlineCode",{parentName:"p"},"ibrav=0"),", you can calculate ",(0,a.kt)("inlineCode",{parentName:"p"},"projwfc")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"lsym=.false."),"\noption."))),(0,a.kt)("p",null,"If we have contribution from multiple orbitals, we can sum desired projections\nusing ",(0,a.kt)("inlineCode",{parentName:"p"},"sumpdos.x")," program. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sumpdos.x *\\(Cl\\)*\\(p\\) > Cl_2p_tot.dat\n")),(0,a.kt)("p",null,"This way we can plot different orbital projections along with energy and\nk-resolution."))}d.isMDXComponent=!0},8703:function(e,n,t){"use strict";n.Z=t.p+"assets/images/silicon-kpdos-2ace70bf86c2083faf0b37cb5f825e7b.png"}}]);